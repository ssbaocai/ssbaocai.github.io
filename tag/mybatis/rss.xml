<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>手撕包菜 • Posts by &#34;mybatis&#34; tag</title>
        <link>https://www.baocai-blog.cn</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sun, 04 Oct 2020 14:58:46 +0800</pubDate>
        <lastBuildDate>Sun, 04 Oct 2020 14:58:46 +0800</lastBuildDate>
        <category>MyBatis</category>
        <category>MySQL</category>
        <category>Java</category>
        <category>Spring</category>
        <category>多线程</category>
        <category>容器</category>
        <category>设计模式</category>
        <item>
            <guid isPermalink="true">https://www.baocai-blog.cn/2020/10/04/MyBatis/</guid>
            <title>MyBatis</title>
            <link>https://www.baocai-blog.cn/2020/10/04/MyBatis/</link>
            <category>MyBatis</category>
            <pubDate>Sun, 04 Oct 2020 14:58:46 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h4 id=&#34;缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓存&#34;&gt;#&lt;/a&gt; 缓存&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;一级缓存：基于 PerpetualCache 的 HashMap 本地缓存，&lt;strong&gt;声明周期&lt;/strong&gt;是和 SQLSession 一致的，作用域 session。&lt;strong&gt;当 Session flush 或 close 之后， Cache 就将清空，一级缓存开启&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;二级缓存：也是基于 PerpetualCache 的 HashMap 本地缓存，作用域为 Mapper 级别的，如果多个 SQLSession 之间需要&lt;strong&gt;共享缓存&lt;/strong&gt;，则需要使用到二级缓存，并且二级缓存可自定义存储源。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mybatis的编程步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mybatis的编程步骤&#34;&gt;#&lt;/a&gt; Mybatis 的编程步骤&lt;/h4&gt;
&lt;p&gt;1、创建 SqlSessionFactory&lt;br&gt;
2、通过 SqlSessionFactory 创建 SqlSession&lt;br&gt;
3、通过 sqlsession 执行数据库操作&lt;br&gt;
 4、调用 session.commit () 提交事务&lt;br&gt;
 5、调用 session.close () 关闭会话&lt;/p&gt;
&lt;p&gt;MyBatis 是一个可以自定义 SQL、存储过程和高级映射的&lt;strong&gt;持久层框架&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;MyBatis 只使用&lt;strong&gt;简单的 XML 和注解&lt;/strong&gt;来&lt;strong&gt;配置和映射&lt;/strong&gt;基本数据类型、Map 接口和 POJO 到数据库记录。&lt;/p&gt;
&lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
            const img = document.createElement(&#39;img&#39;);
            img.style = &#39;display:none !important;&#39;;
            img.src = el.dataset.src;
            img.addEventListener(&#39;error&#39;, () =&gt; {
              img.remove();
              el.style.color = &#39;inherit&#39;;
              el.style.backgroundImage = &#39;none&#39;;
              el.style.background = &#39;none&#39;;
            });
            img.addEventListener(&#39;load&#39;, () =&gt; {
              img.remove();
            });
            document.body.appendChild(img);
          });
      &lt;/script&gt; ]]></description>
        </item>
    </channel>
</rss>
