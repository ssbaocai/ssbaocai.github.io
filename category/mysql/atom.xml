<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.baocai-blog.cn</id>
    <title>手撕包菜 • Posts by &#34;mysql&#34; category</title>
    <link href="https://www.baocai-blog.cn" />
    <updated>2020-10-13T13:43:55.195Z</updated>
    <category term="Java基础" />
    <category term="框架" />
    <category term="数据库" />
    <category term="面向对象" />
    <entry>
        <id>https://www.baocai-blog.cn/2020/10/13/MySQL/</id>
        <title>MySQL</title>
        <link rel="alternate" href="https://www.baocai-blog.cn/2020/10/13/MySQL/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;mysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql&#34;&gt;#&lt;/a&gt; MySQL&lt;/h1&gt;
&lt;h2 id=&#34;基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础&#34;&gt;#&lt;/a&gt; 基础&lt;/h2&gt;
&lt;h3 id=&#34;数据库的三范式是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库的三范式是什么&#34;&gt;#&lt;/a&gt; 数据库的三范式是什么？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;第一范式：强调的是原子性，即数据库表的每一列都是不可分割的原子数据项。&lt;/li&gt;
&lt;li&gt;第二范式：要求实体的属性完全依赖于主关键字。所谓完全依赖是指不能存在仅依赖主关键字一部分的属性。&lt;/li&gt;
&lt;li&gt;第三范式：任何非主属性不依赖于其它非主属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql-的内连接-左连接-右连接有什么区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-的内连接-左连接-右连接有什么区别&#34;&gt;#&lt;/a&gt; MySQL 的内连接、左连接、右连接有什么区别？&lt;/h3&gt;
&lt;p&gt;内连接关键字：inner join；左连接：left join；右连接：right join。&lt;/p&gt;
&lt;p&gt;内连接是把匹配的关联数 据显示出来；左连接是左边的表全部显示出来，右边的表显示出符合条件的数据；右连接正好相反。&lt;/p&gt;
&lt;h3 id=&#34;数据库基本操作语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库基本操作语句&#34;&gt;#&lt;/a&gt; 数据库基本操作语句&lt;/h3&gt;
&lt;p&gt;主键约束 (primary key)  唯一约束 (unique) 非空约束 (not null) 外键约束 (foreign key)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;select&lt;/strong&gt; ... from 表名  where 条件  group by  分组字段  having 条件  order by  排序字段 ase|desc&lt;/p&gt;
&lt;p&gt;去重操作&lt;strong&gt; distinct&lt;/strong&gt;             select distinct 字段名，字段名 2 from 表名&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;insert  into  &amp;lt;表名&amp;gt;  [列名]  values  &amp;lt; 列值 &amp;gt;                delete  from  &amp;lt; 表名 &amp;gt;  where  &amp;lt; 删除条件 &amp;gt;&lt;/strong&gt;**&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update 表名 set  字段名 = 字段值，字段名 = 字段值   [where 修改条件];&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据库特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库特性&#34;&gt;#&lt;/a&gt; 数据库特性&lt;/h2&gt;
&lt;h3 id=&#34;数据库4个特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库4个特性&#34;&gt;#&lt;/a&gt; 数据库 4 个特性：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Atomicity（&lt;strong&gt;原子性&lt;/strong&gt;）：事务不可分割、不可约简。&lt;/li&gt;
&lt;li&gt;Consistency（&lt;strong&gt;一致性&lt;/strong&gt;）：在事务开始前和事务结束后，&lt;strong&gt;数据库的完整性&lt;/strong&gt;没有被破坏。&lt;/li&gt;
&lt;li&gt;Isolation（&lt;strong&gt;隔离性&lt;/strong&gt;）：数据库允许多个事务同时对数据处理，隔离性可以&lt;strong&gt;防止&lt;/strong&gt;多个事务并发执行时由于交叉执行而&lt;strong&gt;导致数据的不一致&lt;/strong&gt;。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。&lt;/li&gt;
&lt;li&gt;Durability（&lt;strong&gt;持久性&lt;/strong&gt;）：事务处理结束后，对数据的修改就是永久，不会丢失。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;事务隔离&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务隔离&#34;&gt;#&lt;/a&gt; 事务隔离&lt;/h2&gt;
&lt;h3 id=&#34;数据库的事务隔离&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库的事务隔离&#34;&gt;#&lt;/a&gt; 数据库的事务隔离：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;READ-UNCOMMITTED：&lt;strong&gt;未提交读&lt;/strong&gt;，最低隔离级别、事务未提交前，就可被其他事务读取（会出现幻读、脏读、不可重复读）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;READ-COMMITTED：&lt;strong&gt;提交读&lt;/strong&gt;，一个事务提交后才能被其他事务读取到（会造成幻读、不可重复读）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;REPEATABLE-READ：&lt;strong&gt;可重复读&lt;/strong&gt;，&lt;strong&gt;默认&lt;/strong&gt;级别，保证多次读取同一个数据，值和内容一致。禁止读取到别的事务未提交的数据（会造成幻读）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SERIALIZABLE：&lt;strong&gt;序列化&lt;/strong&gt;，代价最高最可靠的隔离级别，该隔离级别能防止脏读、不可重复读、幻读。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;脏读&lt;/strong&gt; ：表示一个事务能够读取另一个事务中还未提交的数据。&lt;strong&gt;不可重复读&lt;/strong&gt; ：是指在一个事务内，多次读同一数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分页查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分页查询&#34;&gt;#&lt;/a&gt; 分页查询&lt;/h2&gt;
&lt;h3 id=&#34;oracle页查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#oracle页查询&#34;&gt;#&lt;/a&gt; &lt;strong&gt;Oracle 页查询&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Oracle 中使用 rownum 来进行分页，&lt;/p&gt;
&lt;p&gt;select * from    ( select rownum r,a from tabName where rownum &amp;lt;= 20 )  where r &amp;gt; 10&lt;/p&gt;
&lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
            const img = document.createElement(&#39;img&#39;);
            img.style = &#39;display:none !important;&#39;;
            img.src = el.dataset.src;
            img.addEventListener(&#39;error&#39;, () =&gt; {
              img.remove();
              el.style.color = &#39;inherit&#39;;
              el.style.backgroundImage = &#39;none&#39;;
              el.style.background = &#39;none&#39;;
            });
            img.addEventListener(&#39;load&#39;, () =&gt; {
              img.remove();
            });
            document.body.appendChild(img);
          });
      &lt;/script&gt;</content>
        <category term="数据库" />
        <updated>2020-10-13T13:43:55.195Z</updated>
    </entry>
</feed>
