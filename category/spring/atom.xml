<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.baocai-blog.cn</id>
    <title>手撕包菜 • Posts by &#34;spring&#34; category</title>
    <link href="https://www.baocai-blog.cn" />
    <updated>2020-10-13T13:01:03.426Z</updated>
    <category term="Java基础" />
    <category term="框架" />
    <category term="数据库" />
    <category term="面向对象" />
    <entry>
        <id>https://www.baocai-blog.cn/2020/10/13/Spring/</id>
        <title>Spring</title>
        <link rel="alternate" href="https://www.baocai-blog.cn/2020/10/13/Spring/"/>
        <content type="html">&lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h1 id=&#34;spring&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring&#34;&gt;#&lt;/a&gt; Spring&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;h3 id=&#34;什么是spring&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是spring&#34;&gt;#&lt;/a&gt; 什么是 Spring&lt;/h3&gt;
&lt;p&gt;Spring 是个 java 企业级应用的开源开发框架。Spring 框架目标是简化 Java 企业级应用开发，并通过 POJO 为基础的编程模型促进良好的编程习惯。&lt;/p&gt;
&lt;h2 id=&#34;aop&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aop&#34;&gt;#&lt;/a&gt; AOP&lt;/h2&gt;
&lt;h3 id=&#34;什么是aop&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是aop&#34;&gt;#&lt;/a&gt; 什么是 AOP&lt;/h3&gt;
&lt;p&gt;aop 是面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。&lt;/p&gt;
&lt;h2 id=&#34;ioc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ioc&#34;&gt;#&lt;/a&gt; IOC&lt;/h2&gt;
&lt;h3 id=&#34;什么是ioc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是ioc&#34;&gt;#&lt;/a&gt; 什么是 IOC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IOC 容器负责实例化、配置程序中的对象及建立对象间的依赖。&#34;控制反转&#34; 是指 new 实例工作交给 Spring 容器来做。&lt;/li&gt;
&lt;li&gt;所谓 IoC (控制反转)，对于 spring 框架来说，就是由 spring 来负责控制对象的生命周期和对象间的关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ioc优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ioc优点&#34;&gt;#&lt;/a&gt; IOC 优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;降低代码量&lt;/li&gt;
&lt;li&gt;易于测试&lt;/li&gt;
&lt;li&gt;轻松实现耦合&lt;/li&gt;
&lt;li&gt;支持饿汉式初始化和懒加载&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;依赖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#依赖&#34;&gt;#&lt;/a&gt; 依赖&lt;/h2&gt;
&lt;h3 id=&#34;什么是依赖注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是依赖注入&#34;&gt;#&lt;/a&gt; 什么是依赖注入&lt;/h3&gt;
&lt;p&gt;spring 使用 javaBean 对象的 set 方法或者带参数的构造方法为我们在创建所需对象时将其属性自动设置所需要的值的过程，就是依赖注入的思想。&lt;/p&gt;
&lt;h3 id=&#34;依赖注入方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#依赖注入方式&#34;&gt;#&lt;/a&gt; 依赖注入方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;setter 属性注入&lt;/li&gt;
&lt;li&gt;构造方法注入&lt;/li&gt;
&lt;li&gt;接口注入&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特性&#34;&gt;#&lt;/a&gt; 特性&lt;/h2&gt;
&lt;h3 id=&#34;spring优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring优点&#34;&gt;#&lt;/a&gt; Spring 优点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;方便解耦 ——Spring 提供的 IoC 容器实现了对象依赖关系的管理，避免了硬编码导致的耦合。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持 AOP——Spring 提供的 AOP 功能，方便进行面向切面编程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;集成了多种优秀框架 ——Spring 提供了对各种优秀框架（如 Struts、Hibernate、Hessian、Quartz 等）的直接支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;降低对 API 依赖&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
            if (!el.dataset.src) { return; }
            const img = document.createElement(&#39;img&#39;);
            img.style = &#39;display:none !important;&#39;;
            img.src = el.dataset.src;
            img.addEventListener(&#39;error&#39;, () =&gt; {
              img.remove();
              el.style.color = &#39;inherit&#39;;
              el.style.backgroundImage = &#39;none&#39;;
              el.style.background = &#39;none&#39;;
            });
            img.addEventListener(&#39;load&#39;, () =&gt; {
              img.remove();
            });
            document.body.appendChild(img);
          });
      &lt;/script&gt;</content>
        <category term="框架" />
        <updated>2020-10-13T13:01:03.426Z</updated>
    </entry>
</feed>
